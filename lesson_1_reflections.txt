How did viewing a diff between two versions of a file help you see the
bug that was introduced?

Viewing a diff between 2 versions of a file can help me seeing bugs.

- I can see new typos that were created in the new versions.


How could having easy access to the entire history of a file make you a 
more efficient programmer in the long term?
- undo mistakes easily.
- can help me copy old logic to new versions of the files.


What do you think are the pros and cons of manually choosing when to 
create a commit, like you do in Git, vs having versions automatically 
saved, like Google Docs does?

- pros: you are in control of the version control - you jusdge the call.
- cons: you can mistake - forget to commit or commit in the wrong time.


Why do you think some version control systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file 
separately?

It's all about the usage:
- Git - it is a code repository. Since a program can consists of several files,
        there is a logical association between those files and the changes that
        are made in them are related.
- Google Docs - It is a document repository. Each document is independent from
                the others and there isn't any relation between one document
                and the others.


How can you use the commands git log and git diff to view the history of files?

1) I will use the command git log to view the list of commits made in the files.
2) After realizing which commit history i would like to view, i will use git 
   diff to compare between the previous commit and the chosen one.


How might using version control make you more confident to make changes that
could break something?

Now with the help of Git, i can be sure that if i keep different versions of 
the code, as I should, I would always be able to get back to a old wornking
version of the code.


Now that you have your workspace set up, what do you want to try using Git for?

I will use Git to keep versions of my code I will write.